trigger:
  tags:
    include:
    - v*
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    - CHANGELOG.md

variables:
  ref: $(Build.SourceBranch)
  commit: $(Build.SourceVersion)
  version: ''
  repository: 'focal-freedom-236620/darcy-ai-explorer'
  publicRepository: 'edgeworx/darcy-ai-explorer'
  isRelease: $[startsWith(variables['Build.SourceBranch'], 'refs/tags/')]

stages:
- stage: Preflight
  jobs:
  - job: "Build_UI"
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'
    - script: |
        npm i -g npm
        npm i
        npm run build
      displayName: 'Build ui bundle'
      workingDirectory: ./src/ui
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/src/ui/build'
        ArtifactName: ui_build
      displayName: 'Publish ui build'

- stage: Build
  jobs:
  - job: ARM
    pool: build-farm-rpi4
    steps:
    - template: pipeline/setversion.yaml
    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: ui_build
        downloadPath: $(System.DefaultWorkingDirectory)/src/ui/build
      displayName: download ui_build artifacts
    - task: Docker@2
      displayName: 'Publish ARM Docker Image'
      inputs:
        containerRegistry: 'Edgeworx GCP'
        repository: '$(repository)'
        command: 'buildAndPush'
        Dockerfile: './Dockerfile.bundled'
        buildContext: '.'
        tags: |
          $(version)
          latest

  - job: x86
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
    - template: pipeline/setversion.yaml
    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: ui_build
        downloadPath: $(System.DefaultWorkingDirectory)/src/ui/build
      displayName: download ui_build artifacts
    - task: Docker@2
      displayName: 'Publish x86 Docker Image'
      inputs:
        containerRegistry: 'Edgeworx GCP'
        repository: '$(repository)-x86'
        command: 'buildAndPush'
        Dockerfile: './Dockerfile.x86.bundled'
        buildContext: '.'
        tags: |
          $(version)
          latest
  
- stage: Release
  condition: eq(variables['isRelease'], true)
  jobs:
  - job: ARM
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
    - template: pipeline/setversion.yaml
    - script: |
        docker tag $(repository):$(version) $(publicRepository):$(version)
        docker push $(publicRepository):$(version)
      displayName: 'Publish ARM Docker Image'
  - job: x86
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
    - template: pipeline/setversion.yaml
    - script: |
        docker tag $(repository)-x86:$(version) $(publicRepository)-x86:$(version)
        docker push $(publicRepository)-x86:$(version)
      displayName: 'Publish x86 Docker Image'