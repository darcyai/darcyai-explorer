trigger:
  tags:
    include:
    - v*
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    - CHANGELOG.md

variables:
  ref: $(Build.SourceBranch)
  commit: $(Build.SourceVersion)
  version: 'dev'
  repository: 'focal-freedom-236620/darcy-ai-explorer'
  publicRepository: 'darcyai/darcy-ai-explorer'
  isRelease: $[startsWith(variables['Build.SourceBranch'], 'refs/tags/')]

stages:
- stage: Preflight
  jobs:
  - job: "Build_UI"
    pool:
      vmImage: 'Ubuntu 18.04'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'
    - template: pipeline/setversion.yaml
    - script: |
        sudo apt-get install jq -y
        contents="$(jq '.version = "$(version)"' package.json)" && echo -E "${contents}" > package.json
        cat package.json
      workingDirectory: ./src/ui
      displayName: Update version in package.json
    - script: |
        npm i -g npm
        npm i
        npm run build
      displayName: 'Build ui bundle'
      workingDirectory: ./src/ui
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/src/ui/build'
        ArtifactName: ui_build
      displayName: 'Publish ui build'

- stage: Images
  jobs:
  - job: dev
    timeoutInMinutes: 240
    pool:
      vmImage: 'Ubuntu-latest'
    steps:
    - template: pipeline/setversion.yaml
    - template: pipeline/setup-bundle.yaml
    - script: |
        docker buildx create --name darcyai-explorer-builder
        docker buildx use darcyai-explorer-builder
      displayName: 'Setup docker buildx builder'
    - script: |
        docker buildx build -t gcr.io/$(repository):dev \
          --platform linux/amd64,linux/arm64,linux/arm/v7 \
          --push \
          --file Dockerfile.bundled .
      displayName: 'Build and push dev images'
  - job: prod
    condition: eq(variables['isRelease'], true)
    timeoutInMinutes: 240
    pool:
      vmImage: 'Ubuntu-latest'
    steps:
    - template: pipeline/setversion.yaml
    - template: pipeline/setup-bundle.yaml
    - task: Docker@2
      inputs:
        command: login
        containerRegistry: DarcyAI-Dockerhub
      displayName: Login to Dockerhub
    - script: |
        docker buildx create --name darcyai-explorer-builder
        docker buildx use darcyai-explorer-builder
      displayName: 'Setup docker buildx builder'
    - script: |
        docker buildx build -t $(publicRepository):$(version) \
          --platform linux/amd64,linux/arm64,linux/arm/v7 \
          --push \
          --file Dockerfile.bundled .
      displayName: 'Build and push dev images'
